name: ci

on: [push]


jobs:

  init:
    name: "init vars"
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.vars.outputs.timestamp }}
      branch: ${{ steps.vars.outputs.branch }}
    steps:
      - id: vars
        run: |
          echo "timestamp=$(date +%Y%m%d%H%M | xargs echo -n)" >> "$GITHUB_OUTPUT"
          echo "$GITHUB_EVENT_NAME"
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]];then
            echo "branch=${GITHUB_REF_NAME//\//-}-${GITHUB_HEAD_REF}" >> "$GITHUB_OUTPUT"
          else
            echo "branch=${GITHUB_REF_NAME}" >> "$GITHUB_OUTPUT"
          fi
          cat $GITHUB_OUTPUT

  docker:
    name: build
    runs-on: ubuntu-latest
    needs: init
    env:
      BRANCH: ${{needs.init.outputs.branch}}
      TIMESTAMP: ${{needs.init.outputs.timestamp}}
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/ikki-league/ikki-blog:${{ env.BRANCH }}-${{ env.TIMESTAMP }}

  bootstrap:
    name: bootstrap-k8s-${{ github.ref_name  }}
    runs-on: ubuntu-latest
    needs: init
    env:
      BRANCH: ${{needs.init.outputs.branch}} 
    if: ${{ (github.ref_name == 'staging' || github.ref_name == 'main') }}
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ vars.KUBERNETES_CLUSTER_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: bootstrat prerequisites
        run: |
          check=$(kubectl get ns | grep blog-${{ env.BRANCH }} | wc -l)
          if [[ $check == 0 ]]; then
            sed -r -i 's/dockerConfig/${{ secrets.K8S_DOCKER_CONFIG }}/g' cicd/k8s/prereq/registry-secret.yaml
            kubectl create ns blog-${{ env.BRANCH }}
            kubectl apply -f cicd/k8s/prereq/registry-secret.yaml -n blog-${{ env.BRANCH }}
          else
            echo "prerequisites already bootstraped, skipping..."
          fi

  deploy:
    name: deploy-${{ github.ref_name  }}
    needs: [ docker, init ]
    runs-on: ubuntu-latest
    env:
      BRANCH: ${{needs.init.outputs.branch}}
      TIMESTAMP: ${{needs.init.outputs.timestamp}}
    if: ${{ (github.ref_name == 'staging'|| github.ref_name == 'main') }}
    steps:
      - name: Set the Kubernetes context
        uses: azure/k8s-set-context@v2
        with:
          method: service-account
          k8s-url: ${{ vars.KUBERNETES_CLUSTER_URL }}
          k8s-secret: ${{ secrets.KUBERNETES_SECRET }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: replace vars and deploy
        run: |
          echo "replacing variables..."

          sed -r -i "s/imageTag/${{ env.BRANCH }}-${{ env.TIMESTAMP }}/g" cicd/k8s/app/deployment.yaml

          echo "Deploying app..."
          kubectl apply -R -f cicd/k8s/app/ -n blog-${{ env.BRANCH }}
          kubectl apply -R -f cicd/k8s/ingress/${{ env.BRANCH }}/ -n blog-${{ env.BRANCH }}
      